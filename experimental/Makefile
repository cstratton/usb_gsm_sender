# This file was automagically generated by mbed.org. For more information,
# see http://mbed.org/handbook/Exporting-to-GCC-ARM-Embedded
# To do - fix misidentification of some sources between .c and .cpp
#BUILD_TARGET=TARGET_ARCH_MAX
#BUILD_TARGET=TARGET_NUCLEO_F401RE
#BUILD_TARGET=TARGET_ARCH_MAX
#BUILD_TARGET=TARGET_CHRIS_KL25Z64

ifeq ($(BUILD_TARGET), TARGET_ARCH_MAX)
TARGET_BOARD:=$(BUILD_TARGET)
BUILD_DIR:=build/$(BUILD_TARGET)
 $(info Building for $(BUILD_TARGET) board = $(TARGET_BOARD) into $(BUILD_DIR))
TARGET_CHIP=TARGET_STM32F407VG
TARGET_VENDOR=TARGET_STM
TARGET_FAMILY=TARGET_STM32F4
#TARGET_CMSIS=TARGET_STM32F407G #could be CHIP or BOARD
#CHIPNAME=STM32F407VG #not used for F4
STARTUP_NAME=startup_stm32f407xx.s
LINKER_CHIP=STM32F407XG
LINKER_SCRIPT = ./mbed-src/targets/cmsis/$(TARGET_VENDOR)/$(TARGET_FAMILY)/$(TARGET_CHIP)/TOOLCHAIN_GCC_ARM/$(LINKER_CHIP).ld
else ifeq ($(BUILD_TARGET), TARGET_NUCLEO_F401RE)
TARGET_BOARD:=$(BUILD_TARGET)
BUILD_DIR:=build/$(BUILD_TARGET)
$(info Building for $(BUILD_TARGET) board = $(TARGET_BOARD) into $(BUILD_DIR))
#CC_SYMBOLS = -DTARGET_NUCLEO_F401RE -DTARGET_M4 -DTARGET_CORTEX_M -DTARGET_STM -DTARGET_STM32F4 -DTARGET_STM32F401RE -DTOOLCHAIN_GCC_ARM -DTOOLCHAIN_GCC -D__CORTEX_M4 -DARM_MATH_CM4 -D__FPU_PRESENT=1 -DMBED_BUILD_TIMESTAMP=1433359735.85 -D__MBED__=1 -DTARGET_FF_ARDUINO -DTARGET_FF_MORPHO 
#TARGET_CHIP=TARGET_STM32F401RE
TARGET_BOARD:=$(BUILD_TARGET)
TARGET_CHIP=$(TARGET_BOARD)
TARGET_VENDOR=TARGET_STM
TARGET_FAMILY=TARGET_STM32F4
BUILD_DIR=build/$(BUILD_TARGET)
#CHIPNAME=STM32F401RE #NOT used for F4
LINKER_CHIP=STM32F401XE
STARTUP_NAME=startup_stm32f401xe.s
LINKER_SCRIPT = ./mbed-src/targets/cmsis/$(TARGET_VENDOR)/$(TARGET_FAMILY)/$(TARGET_CHIP)/TOOLCHAIN_GCC_ARM/$(LINKER_CHIP).ld
else ifeq ($(BUILD_TARGET), TARGET_CHRIS_KL25Z64)
TARGET_BOARD:=$(BUILD_TARGET)
BUILD_DIR:=build/$(BUILD_TARGET)
$(info Building for $(BUILD_TARGET) board = $(TARGET_BOARD) into $(BUILD_DIR))
#CC_SYMBOLS = -DTARGET_NUCLEO_F401RE -DTARGET_M4 -DTARGET_CORTEX_M -DTARGET_STM -DTARGET_STM32F4 -DTARGET_STM32F401RE -DTOOLCHAIN_GCC_ARM -DTOOLCHAIN_GCC -D__CORTEX_M4 -DARM_MATH_CM4 -D__FPU_PRESENT=1 -DMBED_BUILD_TIMESTAMP=1433359735.85 -D__MBED__=1 -DTARGET_FF_ARDUINO -DTARGET_FF_MORPHO 
#TARGET_CHIP=TARGET_STM32F401RE
TARGET_BOARD:=TARGET_KL25Z
TARGET_CHIP=$(TARGET_BOARD)
TARGET_HAL_EXTRA:=/$(TARGET_BOARD)#some files in HAL are board specific on this one
TARGET_VENDOR=TARGET_Freescale
TARGET_FAMILY=TARGET_KLXX
BUILD_DIR=build/$(BUILD_TARGET)
CHIPNAME=MKL25Z4
LINKER_CHIP=MKL25Z64
STARTUP_NAME=startup_MKL25Z4.s #FIXME
LINKER_SCRIPT = ./mbed-src/targets/cmsis/$(TARGET_VENDOR)/$(TARGET_FAMILY)/$(TARGET_CHIP)/TOOLCHAIN_GCC_ARM/$(LINKER_CHIP).ld
OPENOCD_CFG=scripts/KL25Z64.cfg
INTERFACE=openocd

else 
$(error BUILD_TARGET=$(BUILD_TARGET) does not specify a known target)
endif
GCC_BIN =
PROJECT := $(BUILD_DIR)/usbtest

MBED_USB_SRC = \
./USBHost/USBHostHub/USBHostHub.cpp \
./USBHost/USBHost/USBEndpoint.cpp \
./USBHost/USBHost/USBHALHost_LPC17.cpp \
./USBHost/USBHost/USBDeviceConnected.cpp \
./USBHost/USBHost/USBHost.cpp \
./USBHost/USBHost/USBHALHost_RZ_A1.cpp 

F401_USB_SRC = \
F401RE-USBHost/USBHost/USBHALHost_F401RE.cpp \
F401RE-USBHost/USBHost/USBHostHub.cpp \
F401RE-USBHost/USBHost/USBHALHost2_F401RE.cpp \
F401RE-USBHost/USBHost/USBDeviceConnected.cpp \
F401RE-USBHost/USBHost/USBHost.cpp \
F401RE-USBHost/USBHost/USBHALHost_KL46Z.cpp \
F401RE-USBHost/USBHost/USBHALHost_LPC4088.cpp \

USB_LOC=F401RE-

RTOS=\
./rtos/rtos/Mutex.cpp \
./rtos/rtos/Semaphore.cpp \
./rtos/rtos/RtosTimer.cpp \
./rtos/rtos/Thread.cpp \
./rtos/rtx/TARGET_CORTEX_M/HAL_CM.cpp \
./rtos/rtx/TARGET_CORTEX_M/rt_CMSIS.cpp \
./rtos/rtx/TARGET_CORTEX_M/rt_Event.cpp \
./rtos/rtx/TARGET_CORTEX_M/rt_List.cpp \
./rtos/rtx/TARGET_CORTEX_M/rt_Mailbox.cpp \
./rtos/rtx/TARGET_CORTEX_M/rt_MemBox.cpp \
./rtos/rtx/TARGET_CORTEX_M/rt_Mutex.cpp \
./rtos/rtx/TARGET_CORTEX_M/rt_Robin.cpp \
./rtos/rtx/TARGET_CORTEX_M/rt_Semaphore.cpp \
./rtos/rtx/TARGET_CORTEX_M/rt_System.cpp \
./rtos/rtx/TARGET_CORTEX_M/rt_Task.cpp \
./rtos/rtx/TARGET_CORTEX_M/rt_Time.cpp \
./rtos/rtx/TARGET_CORTEX_M/RTX_Conf_CM.cpp 


BASE_COMMON := \
./mbed-src/targets/cmsis/$(TARGET_VENDOR)/$(TARGET_FAMILY)/$(TARGET_BOARD)/TOOLCHAIN_GCC_ARM/$(STARTUP_NAME) \
./mbed-src/targets/cmsis/$(TARGET_VENDOR)/$(TARGET_FAMILY)/$(TARGET_BOARD)/cmsis_nvic.cpp \
./mbed-src/targets/cmsis/$(TARGET_VENDOR)/$(TARGET_FAMILY)/$(TARGET_BOARD)/system_$(CHIPNAME).cpp \
./mbed-src/targets/hal/$(TARGET_VENDOR)/$(TARGET_FAMILY)/pwmout_api.cpp \
./mbed-src/targets/hal/$(TARGET_VENDOR)/$(TARGET_FAMILY)$(TARGET_HAL_EXTRA)/serial_api.c \
./mbed-src/targets/hal/$(TARGET_VENDOR)/$(TARGET_FAMILY)/pinmap.cpp \
./mbed-src/targets/hal/$(TARGET_VENDOR)/$(TARGET_FAMILY)/sleep.cpp \
./mbed-src/targets/hal/$(TARGET_VENDOR)/$(TARGET_FAMILY)/us_ticker.cpp \
./mbed-src/targets/hal/$(TARGET_VENDOR)/$(TARGET_FAMILY)/port_api.cpp \
./mbed-src/targets/hal/$(TARGET_VENDOR)/$(TARGET_FAMILY)/gpio_api.cpp \
./mbed-src/targets/hal/$(TARGET_VENDOR)/$(TARGET_FAMILY)/rtc_api.cpp \
./mbed-src/targets/hal/$(TARGET_VENDOR)/$(TARGET_FAMILY)$(TARGET_HAL_EXTRA)/spi_api.cpp \
./mbed-src/targets/hal/$(TARGET_VENDOR)/$(TARGET_FAMILY)$(TARGET_HAL_EXTRA)/gpio_irq_api.cpp \
./mbed-src/targets/hal/$(TARGET_VENDOR)/$(TARGET_FAMILY)/analogout_api.cpp \
./mbed-src/targets/hal/$(TARGET_VENDOR)/$(TARGET_FAMILY)/i2c_api.cpp \
./mbed-src/targets/hal/$(TARGET_VENDOR)/$(TARGET_FAMILY)/analogin_api.cpp \
./mbed-src/targets/hal/$(TARGET_VENDOR)/$(TARGET_FAMILY)/$(TARGET_BOARD)/PeripheralPins.cpp 

BASE_STM32F4 = \
./mbed-src/targets/cmsis/$(TARGET_VENDOR)/$(TARGET_FAMILY)/$(TARGET_CHIP)/TOOLCHAIN_GCC_ARM/$(STARTUP_NAME) \
./mbed-src/targets/cmsis/$(TARGET_VENDOR)/$(TARGET_FAMILY)/$(TARGET_CHIP)/cmsis_nvic.cpp \
./mbed-src/targets/cmsis/$(TARGET_VENDOR)/$(TARGET_FAMILY)/$(TARGET_CHIP)/hal_tick.cpp \
./mbed-src/targets/cmsis/$(TARGET_VENDOR)/$(TARGET_FAMILY)/$(TARGET_CHIP)/system_stm32f4xx.cpp \
./mbed-src/targets/hal/TARGET_STM/TARGET_STM32F4/pwmout_api.cpp \
./mbed-src/targets/hal/TARGET_STM/TARGET_STM32F4/serial_api.cpp \
./mbed-src/targets/hal/TARGET_STM/TARGET_STM32F4/pinmap.cpp \
./mbed-src/targets/hal/TARGET_STM/TARGET_STM32F4/sleep.cpp \
./mbed-src/targets/hal/TARGET_STM/TARGET_STM32F4/us_ticker.cpp \
./mbed-src/targets/hal/TARGET_STM/TARGET_STM32F4/port_api.cpp \
./mbed-src/targets/hal/TARGET_STM/TARGET_STM32F4/gpio_api.cpp \
./mbed-src/targets/hal/TARGET_STM/TARGET_STM32F4/rtc_api.cpp \
./mbed-src/targets/hal/TARGET_STM/TARGET_STM32F4/spi_api.cpp \
./mbed-src/targets/hal/TARGET_STM/TARGET_STM32F4/gpio_irq_api.cpp \
./mbed-src/targets/hal/TARGET_STM/TARGET_STM32F4/analogout_api.cpp \
./mbed-src/targets/hal/TARGET_STM/TARGET_STM32F4/i2c_api.cpp \
./mbed-src/targets/hal/TARGET_STM/TARGET_STM32F4/analogin_api.cpp \
./mbed-src/targets/hal/TARGET_STM/TARGET_STM32F4/$(TARGET_BOARD)/PeripheralPins.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_flash_ramfunc.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_i2c.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_uart.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_dma_ex.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_tim_ex.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_hcd.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_dac.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_sd.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_i2c_ex.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_qspi.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_dma2d.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_rcc_ex.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_cryp.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_pwr_ex.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_flash_ex.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_rcc.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_i2s_ex.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_iwdg.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_sdram.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_spi.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_rng.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_nand.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_smartcard.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_crc.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_gpio.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_cryp_ex.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_rtc.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_hash_ex.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_adc_ex.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_ll_usb.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_sai.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_hash.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_wwdg.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_i2s.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_irda.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_ll_fsmc.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_ltdc.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_dma.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_pccard.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_eth.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_msp_template.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_fmpi2c.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_sai_ex.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_rtc_ex.cpp \
./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_pcd_ex.cpp ./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_fmpi2c_ex.cpp ./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_adc.cpp ./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_ll_sdmmc.cpp ./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_dcmi_ex.cpp ./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_usart.cpp ./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_pwr.cpp ./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_dac_ex.cpp ./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_cec.cpp ./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_spdifrx.cpp ./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_ll_fmc.cpp ./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_dcmi.cpp ./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_tim.cpp ./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_sram.cpp ./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_cortex.cpp ./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_pcd.cpp ./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_can.cpp ./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_flash.cpp ./mbed-src/targets/cmsis/TARGET_STM/TARGET_STM32F4/stm32f4xx_hal_nor.cpp 
#moved to MBED_OVERRIDES ./mbed-src/targets/hal/TARGET_STM/TARGET_STM32F4/mbed_overrides.cpp \

ifeq ($(TARGET_FAMILY), TARGET_STM32F4)
ifndef INTERFACE
INTERFACE=stlink
endif 
FAMILY_BASE := $(BASE_STM32F4)
MBED_OVERRIDES=./mbed-src/targets/hal/$(TARGET_VENDOR)/$(TARGET_FAMILY)/mbed_overrides.cpp
TARGET_CORTEXT_FLAGS := -DTARGET_M4 -D__CORTEX_M4 -DARM_MATH_CM4
CPU = -mcpu=cortex-m4 -mthumb
else ifeq ($(TARGET_FAMILY), TARGET_KLXX)
FAMILY_BASE := $(BASE_COMMON)
MBED_OVERRIDES=./mbed-src/targets/hal/$(TARGET_VENDOR)/$(TARGET_FAMILY)/$(TARGET_BOARD)/mbed_overrides.cpp
TARGET_CORTEX_FLAGS := -DTARGET_M0P -D__CORTEX_M0PLUS -DARM_MATH_CM0PLUS
CPU = -mcpu=cortex-m0plus -mthumb
else
FAMILY_BASE := $(BASE_COMMON)
endif


MBED_COMMON = $(MBED_OVERRIDES)\
./mbed-src/common/us_ticker_api.c ./mbed-src/common/semihost_api.c ./mbed-src/common/lp_ticker_api.c ./mbed-src/common/error.c ./mbed-src/common/pinmap_common.c ./mbed-src/common/gpio.c ./mbed-src/common/ticker_api.c ./mbed-src/common/wait_api.c ./mbed-src/common/rtc_time.c ./mbed-src/common/board.c ./mbed-src/common/assert.c ./mbed-src/common/mbed_interface.c ./mbed-src/common/InterruptIn.c ./mbed-src/common/FileSystemLike.c ./mbed-src/common/I2C.c ./mbed-src/common/SerialBase.c ./mbed-src/common/InterruptManager.c ./mbed-src/common/SPI.c ./mbed-src/common/FilePath.c ./mbed-src/common/LocalFileSystem.c ./mbed-src/common/CAN.c ./mbed-src/common/TimerEvent.c ./mbed-src/common/Ticker.c ./mbed-src/common/Ethernet.c ./mbed-src/common/SPISlave.c ./mbed-src/common/FileLike.c ./mbed-src/common/RawSerial.c ./mbed-src/common/retarget.c ./mbed-src/common/Timeout.c ./mbed-src/common/BusInOut.c ./mbed-src/common/CallChain.c ./mbed-src/common/Stream.c ./mbed-src/common/Serial.c ./mbed-src/common/FileBase.c ./mbed-src/common/Timer.c ./mbed-src/common/BusIn.c ./mbed-src/common/BusOut.c ./mbed-src/common/I2CSlave.c 

SRCS = $(FAMILY_BASE) $(MBED_COMMON) \
./main.cpp ./USBHostE303.cpp \
$(F401_USB_SRC)



# Change project C &; C++ files into object files
# http://kevincuzner.com/2014/04/28/teensy-3-1-bare-metal/
#OBJECTS := $(addprefix $(BUILD_DIR)/,$($($(SRCS:.s=.o):.c=.o):.cpp=.o))
# $(addprefix $(OBJDIR)/,$(notdir $(C_FILES:.c=.cpp)))
#http://stackoverflow.com/questions/12069457/makefile-change-file-list-extension
S_OBJECTS := $(SRCS:.s=.o)
C_OBJECTS := $(S_OBJECTS:.c=.o)
CPP_OBJECTS := $(addprefix $(BUILD_DIR)/,$(C_OBJECTS:.cpp=.o))


OBJECTS := $(CPP_OBJECTS) #$(C_OBJECTS) $(S_OBJECTS)

SYS_OBJECTS = 

INCLUDE_PATHS = -I. -I./mbed-src -I./mbed-src/targets -I./mbed-src/targets/hal \
-I./mbed-src/targets/hal/$(TARGET_VENDOR) \
-I./mbed-src/targets/hal/$(TARGET_VENDOR)/$(TARGET_FAMILY) \
-I./mbed-src/targets/hal/$(TARGET_VENDOR)/$(TARGET_FAMILY)/$(TARGET_BOARD) \
-I./mbed-src/targets/hal/$(TARGET_VENDOR)/$(TARGET_FAMILY)/$(TARGET_CHIP) \
-I./mbed-src/targets/cmsis -I./mbed-src/targets/cmsis/$(TARGET_VENDOR) \
-I./mbed-src/targets/cmsis/$(TARGET_VENDOR)/$(TARGET_FAMILY) \
-I./mbed-src/targets/cmsis/$(TARGET_VENDOR)/$(TARGET_FAMILY)/$(TARGET_BOARD) \
-I./mbed-src/targets/cmsis/$(TARGET_VENDOR)/$(TARGET_FAMILY)/$(TARGET_BOARD)/TOOLCHAIN_GCC_ARM \
-I./mbed-src/targets/cmsis/$(TARGET_VENDOR)/$(TARGET_FAMILY)/$(TARGET_CHIP) \
-I./mbed-src/targets/cmsis/$(TARGET_VENDOR)/$(TARGET_FAMILY)/$(TARGET_CHIP)/TOOLCHAIN_GCC_ARM \
-I./mbed-src/common -I./mbed-src/hal -I./mbed-src/api \
-I./$(USB_LOC)USBHost -I./$(USB_LOC)USBHost/USBHost -I ./$(USB_LOC)USBHost/USBHostHub\
-I./rtos/rtos -I./rtos/rtx/TARGET_CORTEX_M

#
LIBRARY_PATHS = 
LIBRARIES = 


###############################################################################
AS      = $(GCC_BIN)arm-none-eabi-as
CC      = $(GCC_BIN)arm-none-eabi-gcc
CPP     = $(GCC_BIN)arm-none-eabi-g++
LD      = $(GCC_BIN)arm-none-eabi-gcc
OBJCOPY = $(GCC_BIN)arm-none-eabi-objcopy
OBJDUMP = $(GCC_BIN)arm-none-eabi-objdump
SIZE 	= $(GCC_BIN)arm-none-eabi-size

CC_FLAGS = $(CPU) -c -g -fno-common -fmessage-length=0 -Wall -fno-exceptions -ffunction-sections -fdata-sections -fomit-frame-pointer
CC_FLAGS += -MMD -MP
CC_SYMBOLS = -D$(TARGET_BOARD) $(TARGET_CORTEX_FLAGS) -DTARGET_CORTEX_M -D$(TARGET_VENDOR) -D$(TARGET_FAMILY) -DTOOLCHAIN_GCC_ARM -DTOOLCHAIN_GCC 
-DMBED_BUILD_TIMESTAMP=1433039770.49 -D__MBED__=1

LD_FLAGS = $(CPU) -Wl,--gc-sections --specs=nano.specs -u _printf_float -u _scanf_float -Wl,--wrap,main
LD_FLAGS += -Wl,-Map=$(PROJECT).map,--cref
LD_SYS_LIBS = -lstdc++ -lsupc++ -lm -lc -lgcc -lnosys

ifeq ($(DEBUG), 1)
  CC_FLAGS += -DDEBUG -O0
else
  CC_FLAGS += -DNDEBUG -Os
endif

#teensyflash: all
#	 ~/proj/thing/teensy_loader_cli/teensy_loader_cli --mcu=mk20dx256 -w -v $(PROJECT).hex

all: $(PROJECT).bin $(PROJECT).hex 

clean:
	rm -f $(PROJECT).bin $(PROJECT).elf $(PROJECT).hex $(PROJECT).map $(PROJECT).lst $(OBJECTS) $(DEPS)
	echo rm -rf $(BUILD_DIR)

#$(BUILD_DIR)/./mbed-src/targets/hal/$(TARGET_VENDOR)/$(TARGET_FAMILY)$(TARGET_HAL_EXTRA) :
#	$(info creating $@)
#	@mkdir $@

#.s.o:
$(BUILD_DIR)/%.o : %.s
	@mkdir -p $(@D) 
	$(AS) $(CPU) -o $@ $<

#.c.o:
$(BUILD_DIR)/%.o : %.c
	$(info building $<)
	@mkdir -p $(@D) #create output dir if it doesn't exist 
	$(CC)  $(CC_FLAGS) $(CC_SYMBOLS) -std=gnu99   $(INCLUDE_PATHS) -o $@ $<

#.cpp.o:
$(BUILD_DIR)/%.o : %.cpp
	$(info building $<)
	@mkdir -p $(@D) 
	$(CPP) $(CC_FLAGS) $(CC_SYMBOLS) -std=gnu++98 -fno-rtti $(INCLUDE_PATHS) -o $@ $<

$(PROJECT).elf: $(OBJECTS) $(SYS_OBJECTS)
	$(LD) $(LD_FLAGS) -T$(LINKER_SCRIPT) $(LIBRARY_PATHS) -o $@ $^ $(LIBRARIES) $(LD_SYS_LIBS) $(LIBRARIES) $(LD_SYS_LIBS)
	$(SIZE) $@

$(PROJECT).bin: $(PROJECT).elf
	@$(OBJCOPY) -O binary $< $@

$(PROJECT).hex: $(PROJECT).elf
	@$(OBJCOPY) -O ihex $< $@

$(PROJECT).lst: $(PROJECT).elf
	@$(OBJDUMP) -Sdh $< > $@

lst: $(PROJECT).lst

size:
	$(SIZE) $(PROJECT).elf

DEPS = $(OBJECTS:.o=.d) #$(SYS_OBJECTS:.o=.d)
	-include $(DEPS)

ifndef DEBUGGER
DEBUGGER := $(INTERFACE)-debug
endif
ifndef FLASH
FLASH := $(INTERFACE)-flash
endif


stlink-flash:  $(PROJECT).bin
	(killall -s 9 -q st-util ; echo)
	st-flash write $(PROJECT).bin 0x8000000

stlink-debug: all
	(killall -s 9 -q st-util ; echo)
#	(st-util 1>/dev/null 2>/dev/null &) #bad idea, hangs on ctrl-C
	mate-terminal --geometry 48x10-0+0 --hide-menubar -t st-util -e st-util & 
	arm-none-eabi-gdb -ex "target extended-remote :4242" $(PROJECT).elf
	(killall -s 9 -q st-util ; echo)	

#openocd: 

openocd-flash: $(PROJECT).bin
	(killall -s 9 -q openocd ; echo)		
	openocd -f $(OPENOCD_CFG) -c "shutdown" -c "flash write_image erase $(PROJECT).bin 0"	

openocd-debug: all 
	(killall -s 9 -q openocd ; echo)	
	mate-terminal --geometry 48x10-0+0 --hide-menubar -t openocd -e "bash -c \"openocd -f $(OPENOCD_CFG); echo **openocd has exited ; sleep 2 \""  & 
	echo "gdb attempting to connect...."
	arm-none-eabi-gdb -ex "target extended-remote :3333" $(PROJECT).elf

openocd-term: 
	(killall -s 9 -q openocd ; echo)	
	mate-terminal --geometry 48x10-0+0 --hide-menubar -t openocd -e "bash -c \"openocd -f $(OPENOCD_CFG); echo **openocd has exited ; sleep 2 \""  & 
	sleep 2
	echo "telnet attempting to connect...."
	telnet localhost 4444


gdb-server: $(GDB_SERVER)

mflash: all
	cp $(PROJECT).bin /media/cstratton/MBED

debrick: $(DEBRICK)
flash: $(PROJECT).bin $(FLASH)
debug: $(PROJECT).bin $(DEBUGGER)
